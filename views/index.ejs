<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Promemoria</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
</head>

<body>
    <div class="container-fluid">
        <div class="row">
            <div class="col-2 vh-100">
                <h4 class="mt-3">To-Do <!-- Edit mode button --> <button class="btn btn-primary btn-sm"
                        id="edtMode">Edit</button>
                </h4>
                <ul class="nav flex-column mt-4">
                    <% categories.forEach(category=> { %>
                        <li class="nav-item">
                            <div class="d-flex justify-content-between align-items-center">
                                <a class="nav-link <%= currentCategory === category.name ? 'active' : '' %>"
                                    href="/main?category=<%= category.name %>">
                                    <%= category.name %>
                                        <div id="stats">
                                            <div class="badge bg-primary rounded-pill" id="total<%= category.name %>">
                                                <%= category.size%>
                                            </div>
                                            <div class="badge bg-danger rounded-pill"
                                                id="uncompleted<%= category.name %>">
                                                <%= category.sizeUncompleted%>
                                            </div>
                                            <div class="badge bg-success rounded-pill"
                                                id="completed<%= category.name %>">
                                                <%= category.sizeCompleted%>
                                            </div>
                                        </div>
                                </a>
                                <button class="btn btn-danger btn-sm rounded-circle float-end"
                                    id="deleteCategory<%= category.name %>" hidden>
                        <li class="bi bi-trash" id="deleteCategory<%= category.name %>" hidden></li></button>
            </div>
            </li>
            <% }) %>
                </ul>
                <button class="btn btn-primary mt-4" data-bs-toggle="modal" data-bs-target="#addCategoryModal">Add
                    Category</button>
        </div>
        <% if (currentCategory) { %>
            <div class="col-10">
                <div class="d-flex justify-content-between align-items-center">
                    <h2 class="mt-3">
                        <%= currentCategory %>
                    </h2> <button class="btn btn-primary mt-4" data-bs-toggle="modal"
                        data-bs-target="#addReminderModal">Add
                        Reminder</button>
                </div>

                <ul class="list-group mt-4" id="uncompleteList">
                <!-- sort by priority and timestamp  -->
                    <% items.filter(reminder=> !reminder.completed).sort((a, b)=> a.priority === b.priority ? a.date - b.date : b.priority - a.priority).forEach(reminder=> { %>
                        <li class="list-group-item d-flex justify-content-between align-items-center"
                            id="item<%=reminder.id%>">
                            <div id="front" class="d-flex">
                                <input type="checkbox" class="btn-check" id="btncheck<%=reminder.id%>"
                                    autocomplete="off" <%=reminder.completed ? 'checked' : '' %> >
                                <label class="btn btn-outline-primary" id="btnfor<%=reminder.id%>"
                                    for="btncheck<%=reminder.id%>">&nbsp;&nbsp;&nbsp;&nbsp;</label>
                                <div class="ms-3">
                                    <h5 class="mb-0">
                                        <span class="text-danger"><%="!".repeat(reminder.priority)%></span>
                                        <%= reminder.title %>
                                    </h5>
                                    <p class="mb-0">
                                        <%= reminder.description %>
                                    </p>
                                </div>
                            </div>
                            <div class="btn-group ms-auto me-2" role="group">
                                <button type="button" class="btn btn-sm btn-outline-primary" id="editItem<%=reminder.id%>">Edit</button>
                                <button type="button" class="btn btn-sm btn-outline-danger" id="deleteItem<%=reminder.id%>">Delete</button>
                            </div>
                            <span class="<%= reminder.date < new Date() ? 'text-danger' : '' %>">
                                <%= reminder.date ? new Date(reminder.date).toLocaleDateString() : "" %>
                            </span>
                        </li>
                        <% }) %>
                </ul>

                <h3 class="mt-4">Completed</h3>
                <ul class="list-group mt-4" id="completeList">
                    <% items.filter(reminder => reminder.completed).sort((a, b) => a.priority === b.priority ? a.date - b.date : b.priority - a.priority).forEach(reminder => { %>
                        <li class="list-group-item d-flex justify-content-between align-items-center" id="item<%= reminder.id %>">
                            <div id="front" class="d-flex">
                                <input type="checkbox" class="btn-check" id="btncheck<%= reminder.id %>" autocomplete="off" <%= reminder.completed ? 'checked' : '' %> >
                                <label class="btn btn-outline-primary" id="btnfor<%= reminder.id %>" for="btncheck<%= reminder.id %>">&nbsp;&nbsp;&nbsp;&nbsp;</label>
                                <div class="ms-3">
                                    <h5 class="mb-0">
                                        <span class="text-danger"><%= "!".repeat(reminder.priority) %></span>
                                        <%= reminder.title %>
                                    </h5>
                                    <p class="mb-0">
                                        <%= reminder.description %>
                                    </p>
                                </div>
                            </div>
                            <div class="btn-group ms-auto me-2" role="group">
                                <button type="button" class="btn btn-sm btn-outline-primary" id="editItem<%=reminder.id%>">Edit</button>
                                <button type="button" class="btn btn-sm btn-outline-danger" id="deleteItem<%=reminder.id%>">Delete</button>
                            </div>
                            <span class="<%= reminder.date < new Date() ? 'text-danger' : '' %>">
                                <%= reminder.date ? new Date(reminder.date).toLocaleDateString() : "" %>
                            </span>
                        </li>
                    <% }) %>
                </ul>
                

            </div>
            <% } %>
    </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="addReminderModal" tabindex="-1" aria-labelledby="addReminderModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addReminderModalLabel">Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <p class="text-danger" id="valueError" hidden><i class="bi bi-exclamation-circle-fill"></i>
                            Please fill all the fields</p>
                        <div class="mb-3">
                            <label for="title" class="form-label">Title</label>
                            <input type="text" class="form-control" id="title">
                        </div>
                        <div class="mb-3">
                            <label for="description" class="form-label">Description</label>
                            <input type="text" class="form-control" id="description">
                        </div>
                        <div class="form-check mb-3">
                            <input id="dateCheckbox" class="form-check-input" type="checkbox" id="dateReminder">
                            <label class="form-check-label" for="dateReminder">
                                Remind me on a date
                            </label>

                            <input type="date" class="form-control" id="date" hidden>

                        </div>
                        <div class="mb-3">
                            <label for="priority" class="form-label">Priority</label>
                            <select class="form-select" id="priority">
                                <option value="0" selected>No priority</option>
                                <option value="1">Low</option>
                                <option value="2">Medium</option>
                                <option value="3">High</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="list" class="form-label">List</label>
                            <select class="form-select" id="list">
                                <!-- current category is the first -->
                                <% categories.sort((a, b)=> a.name === currentCategory ? -1 : 1).forEach(category=> { %>
                                    <option value="<%= category.name %>">
                                        <%= category.name %>
                                    </option>
                                    <% }) %>
                            </select>
                        </div>
                        <button type="submit" id="add" class="btn btn-primary">Add</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Modal -->

    <div class="modal fade" id="editReminderModal" tabindex="-1" aria-labelledby="editReminderModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editReminderModalLabel">Edit Reminder</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <p class="text-danger" id="valueErrorEdit" hidden><i class="bi bi-exclamation-circle-fill"></i>
                            Please fill all the fields</p>
                        <input hidden readonly id="editId">
                        <div class="mb-3">
                            <label for="title" class="form-label">Title</label>
                            <input type="text" class="form-control" id="editTitle">
                        </div>
                        <div class="mb-3">
                            <label for="description" class="form-label">Description</label>
                            <input type="text" class="form-control" id="editDescription">
                        </div>
                        <div class="form-check mb-3">
                            <input class="form-check-input" type="checkbox" id="editDateReminder">
                            <label class="form-check-label" for="editDateReminder">
                                Remind me on a date
                            </label>

                            <input type="date" class="form-control" id="editDate" hidden>

                        </div>

                        <div class="mb-3">
                            <label for="priority" class="form-label">Priority</label>
                            <select class="form-select" id="editPriority">
                                <option value="0" selected>No priority</option>
                                <option value="1">Low</option>
                                <option value="2">Medium</option>
                                <option value="3">High</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="list" class="form-label">List</label>
                            <select class="form-select" id="editList">
                                <!-- current category is the first -->
                                <% categories.sort((a, b)=> a.name === currentCategory ? -1 : 1).forEach(category=> { %>
                                    <option value="<%= category.name %>">
                                        <%= category.name %>
                                    </option>
                                    <% }) %>
                            </select>
                        </div>
                        <button type="submit" id="editSubmit" class="btn btn-primary">Edit</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Modal -->
    <div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addCategoryModalLabel">Add Category</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <p class="text-danger" id="valueErrorCat" hidden><i class="bi bi-exclamation-circle-fill"></i>
                            Please fill all the fields</p>
                        <div class="mb-3">
                            <label for="categoryName" class="form-label">Name</label>
                            <input type="text" class="form-control" id="categoryName">
                        </div>
                        <button type="submit" id="addCategory" class="btn btn-primary">Add</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const dateCheckbox = document.getElementById('dateCheckbox');
            const date = document.getElementById('date');
            dateCheckbox.addEventListener('change', () => {
                date.hidden = !date.hidden;
            });

            const add = document.getElementById('add');
            add.addEventListener('click', (event) => {
                event.preventDefault();
                const title = document.getElementById('title').value;
                const description = document.getElementById('description').value;
                const date = document.getElementById('date').value;
                const priority = document.getElementById('priority').value;
                const list = document.getElementById('list').value;

                if (!title || !description || !priority || !list) {
                    document.getElementById('valueError').hidden = false;
                    document.getElementById('valueError').innerText = 'Please fill all the fields';
                    if (!title) {
                        document.getElementById('title').classList.add('is-invalid');
                    } else {
                        document.getElementById('title').classList.remove('is-invalid');
                    }
                    if (!description) {
                        document.getElementById('description').classList.add('is-invalid');
                    } else {
                        document.getElementById('description').classList.remove('is-invalid');
                    }
                    if (!priority) {
                        document.getElementById('priority').classList.add('is-invalid');
                    } else {
                        document.getElementById('priority').classList.remove('is-invalid');
                    }
                    if (!list) {
                        document.getElementById('list').classList.add('is-invalid');
                    } else {
                        document.getElementById('list').classList.remove('is-invalid');
                    }
                    return event.preventDefault();
                } else {
                    document.getElementById('valueError').hidden = true;
                }

                fetch('/api/reminders', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        title,
                        description,
                        date,
                        priority,
                        list
                    })
                }).then(response => {
                    if (response.ok) {
                        var modal = new bootstrap.Modal(document.getElementById('addReminderModal'));
                        modal.hide();
                        location.reload();
                        document.getElementById('valueError').hidden = true;
                    } else {
                        document.getElementById('valueError').hidden = false;
                        document.getElementById('valueError').innerText = 'An error occurred!';
                    }
                });
            });

            const checkboxes = document.querySelectorAll('.btn-check');
            checkboxes.forEach(checkbox => {
                checkbox.addEventListener('change', (event) => {
                    const id = event.target.id.replace('btncheck', '');
                    const completed = event.target.checked;
                    fetch(`/api/reminders/${id}`, {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ completed })
                    }).then(response => {
                        if (response.ok) {
                            const item = document.getElementById(`item${id}`);
                            const parentList = completed ? document.getElementById('completeList') : document.getElementById('uncompleteList');
                            parentList.appendChild(item);
                            var cat = "<%= currentCategory %>";
                            const totalBadge = document.getElementById(`total${cat}`);
                            const uncompletedBadge = document.getElementById(`uncompleted${cat}`);
                            const completedBadge = document.getElementById(`completed${cat}`);

                            if (completed) {
                                completedBadge.innerText = parseInt(completedBadge.innerText) + 1;
                                uncompletedBadge.innerText = parseInt(uncompletedBadge.innerText) - 1;
                            } else {
                                completedBadge.innerText = parseInt(completedBadge.innerText) - 1;
                                uncompletedBadge.innerText = parseInt(uncompletedBadge.innerText) + 1;
                            }


                        }
                    });
                });
            });

            const addCategory = document.getElementById('addCategory');
            addCategory.addEventListener('click', (event) => {
                event.preventDefault();
                const categoryName = document.getElementById('categoryName').value;
                if (!categoryName) {
                    document.getElementById('valueErrorCat').hidden = false;
                    document.getElementById('valueErrorCat').innerText = 'Please fill all the fields';
                    document.getElementById('categoryName').classList.add('is-invalid');
                } else {
                    document.getElementById('valueErrorCat').hidden = true;
                    document.getElementById('categoryName').classList.remove('is-invalid');
                }

                fetch('/api/categories', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ name: categoryName })
                }).then(response => {
                    if (response.ok) {
                        var modalCategory = new bootstrap.Modal(document.getElementById('addCategoryModal'));
                        modalCategory.hide();
                        location.reload();
                        document.getElementById('valueErrorCat').hidden = true;
                    } else {
                        document.getElementById('valueErrorCat').hidden = false;
                        document.getElementById('valueErrorCat').innerText = 'An error occurred!';
                    }
                });
            });

            const editMode = document.getElementById('edtMode');
            editMode.addEventListener('click', () => {
                const deleteCategoryButtons = document.querySelectorAll('[id^="deleteCategory"]');
                deleteCategoryButtons.forEach(button => {
                    button.hidden = !button.hidden;
                });
                //const stats = document.querySelectorAll('#stats');
                //stats.forEach(stat => {
                //    stat.hidden = !stat.hidden;
                //});
            });

            const deleteCategoryButtons = document.querySelectorAll('[id^="deleteCategory"]');
            deleteCategoryButtons.forEach(button => {
                button.addEventListener('click', (event) => {
                    const categoryName = event.target.id.replace('deleteCategory', '');
                    fetch(`/api/categories/${categoryName}`, {
                        method: 'DELETE'
                    }).then(response => {
                        if (response.ok) {
                            location.reload();
                        }
                    });
                });
            });

            const deleteButtons = document.querySelectorAll('[id^="deleteItem"]');
            deleteButtons.forEach(button => {
                button.addEventListener('click', (event) => {
                    const id = event.target.id.replace('deleteItem', '');
                    console.log(event.target.id)
                    fetch(`/api/reminders/${id}`, {
                        method: 'DELETE'
                    }).then(response => {
                        if (response.ok) {
                            location.reload();
                        }
                    });
                });
            });

            const editButtons = document.querySelectorAll('[id^="editItem"]');
            editButtons.forEach(button => {
                button.addEventListener('click', (event) => {
                    const id = event.target.id.replace('editItem', '');
                    fetch(`/api/reminders/${id}`)
                        .then(response => response.json())
                        .then(reminder => {
                            console.log(reminder);
                            document.getElementById('editId').value = reminder.id;
                            document.getElementById('editTitle').value = reminder.title;
                            document.getElementById('editDescription').value = reminder.description;
                            document.getElementById('editDate').value = reminder.date ? new Date(reminder.date).toISOString().split('T')[0] : '';
                            document.getElementById('editPriority').value = reminder.priority;
                            document.getElementById('editList').value = reminder.list;
                            var modal = new bootstrap.Modal(document.getElementById('editReminderModal'));
                            modal.show();
                        });
                }); 
            });

            const editDateReminder = document.getElementById('editDateReminder');
            const editDate = document.getElementById('editDate');
            editDateReminder.addEventListener('change', () => {
                editDate.hidden = !editDate.hidden;
            });

            const editSubmit = document.getElementById('editSubmit');
            editSubmit.addEventListener('click', (event) => {
                event.preventDefault();
                const id = document.getElementById('editId').value;
                const title = document.getElementById('editTitle').value;
                const description = document.getElementById('editDescription').value;
                const date = document.getElementById('editDate').value;
                const priority = document.getElementById('editPriority').value;
                const list = document.getElementById('editList').value;

                if (!title || !description || !priority || !list) {
                    document.getElementById('valueErrorEdit').hidden = false;
                    document.getElementById('valueErrorEdit').innerText = 'Please fill all the fields';
                    if (!title) {
                        document.getElementById('editTitle').classList.add('is-invalid');
                    } else {
                        document.getElementById('editTitle').classList.remove('is-invalid');
                    }
                    if (!description) {
                        document.getElementById('editDescription').classList.add('is-invalid');
                    } else {
                        document.getElementById('editDescription').classList.remove('is-invalid');
                    }
                    if (!priority) {
                        document.getElementById('editPriority').classList.add('is-invalid');
                    } else {
                        document.getElementById('editPriority').classList.remove('is-invalid');
                    }
                    if (!list) {
                        document.getElementById('editList').classList.add('is-invalid');
                    } else {
                        document.getElementById('editList').classList.remove('is-invalid');
                    }
                    return event.preventDefault();
                } else {
                    document.getElementById('valueErrorEdit').hidden = true;
                }

                fetch(`/api/reminders/${id}`, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        title,
                        description,
                        date,
                        priority,
                        list
                    })
                }).then(response => {
                    if (response.ok) {
                        var modal = new bootstrap.Modal(document.getElementById('editReminderModal'));
                        modal.hide();
                        location.reload();
                        document.getElementById('valueErrorEdit').hidden = true;
                    } else {
                        document.getElementById('valueErrorEdit').hidden = false;
                        document.getElementById('valueErrorEdit').innerText = 'An error occurred!';
                    }
                });
            });
            

        });

    </script>

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.7/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>
</body>

</html>