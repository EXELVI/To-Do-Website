<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Promemoria</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>

<body>
    <div class="container-fluid">
        <div class="row">
            <div class="col-2 vh-100">
                <h4 class="mt-3">To-Do</h4>
                <ul class="nav flex-column mt-4">
                    <% categories.forEach(category=> { %>
                        <li class="nav-item">
                            <a class="nav-link <%= currentCategory === category.id ? 'active' : '' %>" href="#<%= category.id %>">
                                <%= category.name %>
                            </a>
                        </li>
                        <% }) %>
                </ul>
                <button class="btn btn-primary mt-4" data-bs-toggle="modal" data-bs-target="#addCategoryModal">Add
                    Category</button>
            </div>
            <div class="col-10">
                <h2 class="mt-3">Reminders</h2>
                <ul class="list-group mt-4">
                    <% items.forEach(reminder=> { %>
                        <!--
{
  "_id": {
    "$oid": "669d893abafa53d2c088bf91"
  },
  "title": "A test To-Do with a date",
  "description": "A To-Do with a reminder!!!",
  "date": 1721600340000,
  "id": "6e7ebaca-109b-4a2a-acd9-d602524d97d2",
  "users": [
    "462339171537780737"
  ],
  "creator": "462339171537780737",
  "timestamp": 1721600314854,
  "completed": false,
  "completedBy": "462339171537780737",
  "completedTimestamp": 1721600374573,
  "reminded": true
}
                            -->
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <div id="front" class="d-flex">
                                <input type="checkbox" class="btn-check" id="btncheck<%=reminder.id%>"
                                    autocomplete="off" <%=reminder.completed ? 'checked' : '' %> >
                                <label class="btn btn-outline-primary" for="btncheck<%=reminder.id%>"></label>
                                <div class="ms-3">
                                    <h5 class="mb-0">
                                        <%= reminder.title %>
                                    </h5>
                                    <p class="mb-0">
                                        <%= reminder.description %>
                                    </p>
                                </div>

                            </div>
                            <span class="<%= reminder.date < new Date() ? 'text-danger' : '' %>">
                                <%= reminder.date ? new Date(reminder.date).toLocaleDateString() : "" %>
                            </span>
                        </li>
                        <% }) %>
                </ul>
                <button class="btn btn-primary mt-4" data-bs-toggle="modal" data-bs-target="#addReminderModal">Add
                    Reminder</button>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="addReminderModal" tabindex="-1" aria-labelledby="addReminderModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addReminderModalLabel">Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <p class="text-danger" id="valueError" hidden><i class="bi bi-exclamation-circle-fill"></i>
                            Please fill all the fields</p>
                        <div class="mb-3">
                            <label for="title" class="form-label">Title</label>
                            <input type="text" class="form-control" id="title">
                        </div>
                        <div class="mb-3">
                            <label for="description" class="form-label">Description</label>
                            <input type="text" class="form-control" id="description">
                        </div>
                        <div class="form-check mb-3">
                            <input id="dateCheckbox" class="form-check-input" type="checkbox" id="dateReminder">
                            <label class="form-check-label" for="dateReminder">
                                Remind me on a date
                            </label>

                            <input type="date" class="form-control" id="date" hidden>

                        </div>
                        <div class="mb-3">
                            <label for="priority" class="form-label">Priority</label>
                            <select class="form-select" id="priority">
                                <option selected>No priority</option>
                                <option value="1">Low</option>
                                <option value="2">Medium</option>
                                <option value="3">High</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="list" class="form-label">List</label>
                            <select class="form-select" id="list">
                                <% categories.forEach(category=> { %>
                                    <option value="<%= category.id %>">
                                        <%= category.name %>
                                    </option>
                                    <% }) %>
                            </select>
                        </div>
                        <button type="submit" id="add" class="btn btn-primary">Save</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addCategoryModalLabel">Add Category</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <p class="text-danger" id="valueErrorCat" hidden><i class="bi bi-exclamation-circle-fill"></i>
                            Please fill all the fields</p>
                        <div class="mb-3">
                            <label for="categoryName" class="form-label">Name</label>
                            <input type="text" class="form-control" id="categoryName">
                        </div>
                        <button type="submit" id="addCategory" class="btn btn-primary">Save</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const modal = new bootstrap.Modal(document.getElementById('addReminderModal'));
            const modalCategory = new bootstrap.Modal(document.getElementById('addCategoryModal'));

            const dateCheckbox = document.getElementById('dateCheckbox');
            const date = document.getElementById('date');
            dateCheckbox.addEventListener('change', () => {
                date.hidden = !date.hidden;
            });
            const add = document.getElementById('add');

            add.addEventListener('click', (event) => {
                event.preventDefault();
                const title = document.getElementById('title').value;
                const description = document.getElementById('description').value;
                const date = document.getElementById('date').value;
                const priority = document.getElementById('priority').value;
                const list = document.getElementById('list').value;

                if (!title || !description || !priority || !list) {
                    document.getElementById('valueError').hidden = false;
                    document.getElementById('valueError').innerText = 'Please fill all the fields';
                    if (!title) {
                        document.getElementById('title').classList.add('is-invalid');
                    } else {
                        document.getElementById('title').classList.remove('is-invalid');
                    }
                    if (!description) {
                        document.getElementById('description').classList.add('is-invalid');
                    } else {
                        document.getElementById('description').classList.remove('is-invalid');
                    }
                    if (!priority) {
                        document.getElementById('priority').classList.add('is-invalid');
                    } else {
                        document.getElementById('priority').classList.remove('is-invalid');
                    }
                    if (!list) {
                        document.getElementById('list').classList.add('is-invalid');
                    } else {
                        document.getElementById('list').classList.remove('is-invalid');
                    }
                    return event.preventDefault();
                } else {
                    document.getElementById('valueError').hidden = true;
                }

                fetch('/api/reminders', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        title,
                        description,
                        date,
                        priority,
                        list
                    })
                }).then(response => {
                    if (response.ok) {
                        modal.hide();
                        location.reload();
                        document.getElementById('valueError').hidden = true;
                    } else {
                        document.getElementById('valueError').hidden = false;
                        document.getElementById('valueError').innerText = 'An error occurred!';
                    }
                });
            });
        });

        const checkboxes = document.querySelectorAll('.btn-check');
        checkboxes.forEach(checkbox => {
            checkbox.addEventListener('change', (event) => {
                const id = event.target.id.replace('btncheck', '');
                fetch(`/api/reminders/${id}`, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        completed: event.target.checked
                    })
                }).then(response => {
                    if (response.ok) {
                        location.reload();
                    }
                });
            });
        });

        const addCategory = document.getElementById('addCategory');
        addCategory.addEventListener('click', (event) => {
            event.preventDefault();
            const categoryName = document.getElementById('categoryName').value;
            if (!categoryName) {
                document.getElementById('valueErrorCat').hidden = false;
                document.getElementById('valueErrorCat').innerText = 'Please fill all the fields';
                document.getElementById('categoryName').classList.add('is-invalid');
              
            } else {
                document.getElementById('valueErrorCat').hidden = true;
                document.getElementById('categoryName').classList.remove('is-invalid');
            }

            fetch('/api/categories', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    name: categoryName
                })
            }).then(response => {
                if (response.ok) {
                    modalCategory.hide();
                    location.reload();
                } else {
                    document.getElementById('valueErrorCat').hidden = false;
                    document.getElementById('valueErrorCat').innerText = 'An error occurred!';
                }
            });
        });

    </script>

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.7/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>
</body>

</html>